<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="css/style.css">
    <script defer src="https://kit.fontawesome.com/00e77377ee.js" crossorigin="anonymous"></script>
    <link rel="shortcut icon" href="assets/logo.jpeg" type="image/x-icon">
    <title>Latest Offer | BaytClothing</title>

    <style>
       
    </style>
    

</head>
<body>
    <%- include('./partials/loader.ejs') %>

    <%- include('./partials/header.ejs') %>

    <section class=" offer-banner" style="position: relative;">
        <div class="shadow"></div>
        <div class="offer-text">
            <h2>Subscribe to Win a Promotional Code <br> and Redeem Your Discount!</h2>
            <span id="timer"></span>
        </div>
    </section>

    
    <%- include('./partials/footer.ejs') %>

    <script src="js/script.js"></script>
    <script>
        // Set the initial countdown time (from server)
        let remainingTime = <%= r_time %>; // Read from the server
    
        // Function to update the timer
        function updateTimer() {
            if (remainingTime > 0) {
                remainingTime--;
    
                // Calculate days, hours, minutes, and seconds
                const days = Math.floor(remainingTime / (60 * 60 * 24));
                const hours = Math.floor((remainingTime % (60 * 60 * 24)) / (60 * 60));
                const minutes = Math.floor((remainingTime % (60 * 60)) / 60);
                const seconds = remainingTime % 60;
    
                // Display the timer in the format: Days:Hours:Minutes:Seconds
                document.getElementById('timer').textContent = 
                    `${days} : ${hours} : ${minutes} : ${seconds}`;
            } else {
                // If the countdown expires, reset it
                // Send AJAX request to inform server to reset the timer
                fetch('/reset-timer', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ status: 'expired' }),
                })
                .then(() => {
                    window.location.href = '/offer'; // Redirect to offer page
                });
            }
        }
    
        // Call the updateTimer function every second
        setInterval(updateTimer, 1000);
    
        // Call the function once immediately to initialize the timer
        updateTimer();
    </script>
    
    
    
    
    

</body>
</html>
